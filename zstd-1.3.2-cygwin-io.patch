--- origsrc/zstd-1.1.3/contrib/pzstd/Options.cpp	2016-09-27 17:15:03.000000000 -0500
+++ src/zstd-1.1.3/contrib/pzstd/Options.cpp	2016-10-05 13:05:48.631523100 -0500
@@ -18,8 +18,7 @@
 #include <thread>
 #include <vector>
 
-#if defined(MSDOS) || defined(OS2) || defined(WIN32) || defined(_WIN32) ||     \
-    defined(__CYGWIN__)
+#if defined(MSDOS) || defined(OS2) || defined(WIN32) || defined(_WIN32)
 #include <io.h> /* _isatty */
 #define IS_CONSOLE(stdStream) _isatty(_fileno(stdStream))
 #elif defined(_POSIX_C_SOURCE) || defined(_XOPEN_SOURCE) || defined(_POSIX_SOURCE) || (defined(__APPLE__) && defined(__MACH__)) || \

--- origsrc/zstd-1.1.3/contrib/pzstd/Pzstd.cpp	2016-09-27 17:15:03.000000000 -0500
+++ src/zstd-1.1.3/contrib/pzstd/Pzstd.cpp	2016-10-05 13:11:29.793036300 -0500
@@ -6,6 +6,7 @@
  * LICENSE file in the root directory of this source tree) and the GPLv2 (found
  * in the COPYING file in the root directory of this source tree).
  */
+#define _POSIX_C_SOURCE 1
 #include "Pzstd.h"
 #include "SkippableFrame.h"
 #include "utils/FileSystem.h"
@@ -24,7 +25,7 @@
 #if defined(MSDOS) || defined(OS2) || defined(WIN32) || defined(_WIN32) || defined(__CYGWIN__)
 #  include <fcntl.h>    /* _O_BINARY */
 #  include <io.h>       /* _setmode, _isatty */
-#  define SET_BINARY_MODE(file) { if (_setmode(_fileno(file), _O_BINARY) == -1) perror("Cannot set _O_BINARY"); }
+#  define SET_BINARY_MODE(file) { if (setmode(fileno(file), O_BINARY) == -1) perror("Cannot set O_BINARY"); }
 #else
 #  include <unistd.h>   /* isatty */
 #  define SET_BINARY_MODE(file)

--- origsrc/zstd-1.1.3/programs/platform.h	2017-02-06 18:17:34.000000000 +0100
+++ src/zstd-1.1.3/programs/platform.h	2017-03-05 10:06:49.973312700 +0100
@@ -75,7 +75,7 @@
      || defined(__DragonFly__) || defined(__FreeBSD__) || defined(__NetBSD__) || defined(__OpenBSD__)  /* BSD distros */
 #    define PLATFORM_POSIX_VERSION 200112L
 #  else
-#    if defined(__linux__) || defined(__linux)
+#    if defined(__linux__) || defined(__linux) || defined(__CYGWIN__)
 #      ifndef _POSIX_C_SOURCE
 #        define _POSIX_C_SOURCE 200112L  /* use feature test macro */
 #      endif
@@ -96,10 +96,10 @@
 /*-*********************************************
 *  Detect if isatty() and fileno() are available
 ************************************************/
-#if (defined(__linux__) && (PLATFORM_POSIX_VERSION >= 1)) || (PLATFORM_POSIX_VERSION >= 200112L) || defined(__DJGPP__)
+#if (defined(__linux__) && (PLATFORM_POSIX_VERSION >= 1)) || (PLATFORM_POSIX_VERSION >= 200112L) || defined(__DJGPP__) || defined(__CYGWIN__)
 #  include <unistd.h>   /* isatty */
 #  define IS_CONSOLE(stdStream) isatty(fileno(stdStream))
-#elif defined(MSDOS) || defined(OS2) || defined(__CYGWIN__)
+#elif defined(MSDOS) || defined(OS2)
 #  include <io.h>       /* _isatty */
 #  define IS_CONSOLE(stdStream) _isatty(_fileno(stdStream))
 #elif defined(WIN32) || defined(_WIN32)
@@ -122,7 +122,7 @@
 #if defined(MSDOS) || defined(OS2) || defined(WIN32) || defined(_WIN32)
 #  include <fcntl.h>   /* _O_BINARY */
 #  include <io.h>      /* _setmode, _fileno, _get_osfhandle */
-#  if !defined(__DJGPP__)
+#  if !defined(__DJGPP__) && !defined(__CYGWIN__)
 #    include <windows.h> /* DeviceIoControl, HANDLE, FSCTL_SET_SPARSE */
 #    include <winioctl.h> /* FSCTL_SET_SPARSE */
 #    define SET_BINARY_MODE(file) { int unused=_setmode(_fileno(file), _O_BINARY); (void)unused; }

@@ -75,7 +75,7 @@
      || defined(__DragonFly__) || defined(__FreeBSD__) || defined(__NetBSD__) || defined(__OpenBSD__)  /* BSD distros */
 #    define PLATFORM_POSIX_VERSION 200112L
 #  else
-#    if defined(__linux__) || defined(__linux)
+#    if defined(__linux__) || defined(__linux) || defined(__CYGWIN__)
 #      ifndef _POSIX_C_SOURCE
 #        define _POSIX_C_SOURCE 200112L  /* use feature test macro */
 #      endif
@@ -96,10 +96,10 @@
 /*-*********************************************
 *  Detect if isatty() and fileno() are available
 ************************************************/
-#if (defined(__linux__) && (PLATFORM_POSIX_VERSION >= 1)) || (PLATFORM_POSIX_VERSION >= 200112L) || defined(__DJGPP__)
+#if (defined(__linux__) && (PLATFORM_POSIX_VERSION >= 1)) || (PLATFORM_POSIX_VERSION >= 200112L) || defined(__DJGPP__) || defined(__CYGWIN__)
 #  include <unistd.h>   /* isatty */
 #  define IS_CONSOLE(stdStream) isatty(fileno(stdStream))
-#elif defined(MSDOS) || defined(OS2) || defined(__CYGWIN__)
+#elif defined(MSDOS) || defined(OS2)
 #  include <io.h>       /* _isatty */
 #  define IS_CONSOLE(stdStream) _isatty(_fileno(stdStream))
 #elif defined(WIN32) || defined(_WIN32)
@@ -122,7 +122,7 @@
 #if defined(MSDOS) || defined(OS2) || defined(WIN32) || defined(_WIN32)
 #  include <fcntl.h>   /* _O_BINARY */
 #  include <io.h>      /* _setmode, _fileno, _get_osfhandle */
-#  if !defined(__DJGPP__)
+#  if !defined(__DJGPP__) && !defined(__CYGWIN__)
 #    include <windows.h> /* DeviceIoControl, HANDLE, FSCTL_SET_SPARSE */
 #    include <winioctl.h> /* FSCTL_SET_SPARSE */
 #    define SET_BINARY_MODE(file) { int unused=_setmode(_fileno(file), _O_BINARY); (void)unused; }

--- origsrc/zstd-1.1.3/zlibWrapper/gzlib.c	2017-03-05 11:16:41.871150700 +0100
+++ src/zstd-1.1.3/zlibWrapper/gzlib.c	2017-03-05 11:11:07.619996600 +0100
@@ -191,7 +191,7 @@
     }
 
     /* save the path name for error messages */
-#ifdef WIDECHAR
+#if defined(WIDECHAR)  && !defined(__CYGWIN__)
     if (fd == -2) {
         len = wcstombs(NULL, path, 0);
         if (len == (z_size_t)-1)
@@ -205,7 +205,7 @@
         free(state.state);
         return NULL;
     }
-#ifdef WIDECHAR
+#if defined(WIDECHAR)  && !defined(__CYGWIN__)
     if (fd == -2)
         if (len)
             wcstombs(state.state->path, path, len + 1);
@@ -242,7 +242,7 @@
 
     /* open the file with the appropriate flags (or just use fd) */
     state.state->fd = fd > -1 ? fd : (
-#ifdef WIDECHAR
+#if defined(WIDECHAR)  && !defined(__CYGWIN__)
         fd == -2 ? _wopen(path, oflag, 0666) :
 #endif
         open((const char *)path, oflag, 0666));
@@ -306,7 +306,7 @@
 }
 
 /* -- see zlib.h -- */
-#ifdef WIDECHAR
+#if defined(WIDECHAR)  && !defined(__CYGWIN__)
 gzFile ZEXPORT gzopen_w(path, mode)
     const wchar_t *path;
     const char *mode;

